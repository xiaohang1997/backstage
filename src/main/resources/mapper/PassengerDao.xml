<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwh.backstage.dao.PassengerDao">

    <resultMap type="com.dwh.backstage.entity.Passenger" id="PassengerMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userid" column="userId" jdbcType="INTEGER"/>
        <result property="certificatetypeid" column="certificatetypeId" jdbcType="INTEGER"/>
        <result property="certificatenumber" column="certificateNumber" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="usergender" column="usergender" jdbcType="VARCHAR"/>
        <result property="userbirthdate" column="userbirthdate" jdbcType="OTHER"/>
        <result property="userphone" column="userphone" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="PassengerMap">
        select id,
               userId,
               certificatetypeId,
               certificateNumber,
               username,
               usergender,
               userbirthdate,
               userphone
        from my_travel.passenger
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="PassengerMap">
        select id,
               userId,
               certificatetypeId,
               certificateNumber,
               username,
               usergender,
               userbirthdate,
               userphone
        from my_travel.passenger
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="PassengerMap">
        select
        id, userId, certificatetypeId, certificateNumber, username, usergender, userbirthdate, userphone
        from my_travel.passenger
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userid != null">
                and userId = #{userid}
            </if>
            <if test="certificatetypeid != null">
                and certificatetypeId = #{certificatetypeid}
            </if>
            <if test="certificatenumber != null and certificatenumber != ''">
                and certificateNumber = #{certificatenumber}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="usergender != null and usergender != ''">
                and usergender = #{usergender}
            </if>
            <if test="userbirthdate != null">
                and userbirthdate = #{userbirthdate}
            </if>
            <if test="userphone != null and userphone != ''">
                and userphone = #{userphone}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into my_travel.passenger(userId, certificatetypeId, certificateNumber, username, usergender,
                                        userbirthdate, userphone)
        values (#{userid}, #{certificatetypeid}, #{certificatenumber}, #{username}, #{usergender}, #{userbirthdate},
                #{userphone})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into my_travel.passenger(userId, certificatetypeId, certificateNumber, username, usergender,
        userbirthdate, userphone)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userid}, #{entity.certificatetypeid}, #{entity.certificatenumber}, #{entity.username},
            #{entity.usergender}, #{entity.userbirthdate}, #{entity.userphone})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into my_travel.passenger(userId, certificatetypeId, certificateNumber, username, usergender,
        userbirthdate, userphone)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userid}, #{entity.certificatetypeid}, #{entity.certificatenumber}, #{entity.username},
            #{entity.usergender}, #{entity.userbirthdate}, #{entity.userphone})
        </foreach>
        on duplicate key update
        userId = values(userId) , certificatetypeId = values(certificatetypeId) , certificateNumber =
        values(certificateNumber) , username = values(username) , usergender = values(usergender) , userbirthdate =
        values(userbirthdate) , userphone = values(userphone)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update my_travel.passenger
        <set>
            <if test="userid != null">
                userId = #{userid},
            </if>
            <if test="certificatetypeid != null">
                certificatetypeId = #{certificatetypeid},
            </if>
            <if test="certificatenumber != null and certificatenumber != ''">
                certificateNumber = #{certificatenumber},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="usergender != null and usergender != ''">
                usergender = #{usergender},
            </if>
            <if test="userbirthdate != null">
                userbirthdate = #{userbirthdate},
            </if>
            <if test="userphone != null and userphone != ''">
                userphone = #{userphone},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from my_travel.passenger
        where id = #{id}
    </delete>

</mapper>